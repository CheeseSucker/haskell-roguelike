#!/bin/bash

FINDCMD='find -type d -printf "%p "'
LTIMECMD="stat -c %Z \`$FINDCMD\` | sort -nr | head -n 1"


# Set environment variables (console size)
if [ `command -v resize` ]; then
	eval $(resize)
else
	export LINES=30
	export COLUMNS=100
fi

# Build haskell program
ghc -isrc -outputdir bin -o bin/roguelike src/roguelike.hs

# Run game if build was successful
if [ $? -eq 0 ]; then
	LTIME=$(eval $LTIMECMD)
	echo "Running game ..."
	bin/roguelike | cat
else
	LTIME=$(eval $LTIMECMD)
fi

if [ ! `command -v stat` ]; then
	# Can not determine when files are changed
	exit
fi

# Display message to user
echo ""
echo "----------------------------"
echo "Waiting for file changes ..."
echo "----------------------------"
echo ""

# Loop until file has changed
ATIME=$(eval $LTIMECMD)
while [[ "$LTIME" == "$ATIME" ]]; do
	sleep 1s
	LTIME=$(eval $LTIMECMD)
done

# Rerun this script, potentially with changes.
$0
